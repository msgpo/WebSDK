/* License (MIT)
 * Copyright 2009 Sony Ericsson Mobile Communications AB
 * website: http://developer.sonyericsson.com/
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * Software), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.sonyericsson.web.sdk.view;

import com.sonyericsson.web.sdk.model.Settings;
import java.awt.Desktop;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.event.HyperlinkEvent;
import org.jdesktop.application.Action;

public class SetupAndroidPanel extends AbstractPanel {

  /** Creates new form setupAndroidPanel */
  public SetupAndroidPanel(Settings settings) {
    initComponents();
    androidBrowseTextField.setText(settings.getAndroidSDKPath());
    
    addComponentListener(new ComponentAdapter() {

      @Override
      public void componentShown(ComponentEvent e) {
        System.out.println("downloadPanel.componentShown");
        firePanelChanged();

      }

      @Override
      public void componentHidden(ComponentEvent e) {
      }
    });
  }

  @Override
  public boolean isNextEnabled() {
    File sdkToolsFolder = new File(androidBrowseTextField.getText() + "//tools");
    return sdkToolsFolder.exists();
  }

  @Action
  public void browseAndroidPath() {
    JFileChooser chooser = new JFileChooser();
    chooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File selectedFolder = chooser.getSelectedFile();
      androidBrowseTextField.setText(selectedFolder.getPath());
    }
    firePanelChanged();
  }

  public String getPath() {
    return androidBrowseTextField.getText();
  }


  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    androidTopPanel = new javax.swing.JPanel();
    jLabel3 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    androidMainPanel = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTextPane2 = new javax.swing.JTextPane();
    browsePanel = new javax.swing.JPanel();
    androidBrowseTextField = new javax.swing.JTextField();
    androidBrowseButton = new javax.swing.JButton();
    androidBrowseLabel = new javax.swing.JLabel();

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.sonyericsson.web.sdk.controller.WebSDK.class).getContext().getResourceMap(SetupAndroidPanel.class);
    setBackground(resourceMap.getColor("Form.background")); // NOI18N
    setName("Form"); // NOI18N
    setOpaque(false);
    setLayout(new java.awt.BorderLayout());

    androidTopPanel.setBackground(resourceMap.getColor("androidTopPanel.background")); // NOI18N
    androidTopPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
    androidTopPanel.setName("androidTopPanel"); // NOI18N
    androidTopPanel.setOpaque(false);
    androidTopPanel.setPreferredSize(new java.awt.Dimension(90, 90));
    androidTopPanel.setLayout(new java.awt.BorderLayout());

    jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
    jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
    jLabel3.setName("jLabel3"); // NOI18N
    androidTopPanel.add(jLabel3, java.awt.BorderLayout.LINE_START);

    jLabel2.setName("jLabel2"); // NOI18N
    androidTopPanel.add(jLabel2, java.awt.BorderLayout.LINE_END);

    jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N
    androidTopPanel.add(jLabel1, java.awt.BorderLayout.LINE_END);

    add(androidTopPanel, java.awt.BorderLayout.PAGE_START);

    androidMainPanel.setBackground(resourceMap.getColor("androidMainPanel.background")); // NOI18N
    androidMainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
    androidMainPanel.setName("androidMainPanel"); // NOI18N
    androidMainPanel.setLayout(new java.awt.BorderLayout());

    jScrollPane2.setBorder(null);
    jScrollPane2.setName("jScrollPane2"); // NOI18N
    jScrollPane2.setOpaque(false);

    jTextPane2.setBackground(resourceMap.getColor("jTextPane2.background")); // NOI18N
    jTextPane2.setBorder(null);
    jTextPane2.setContentType(resourceMap.getString("jTextPane2.contentType")); // NOI18N
    jTextPane2.setEditable(false);
    jTextPane2.setText(resourceMap.getString("jTextPane2.text")); // NOI18N
    jTextPane2.setFocusable(false);
    jTextPane2.setName("jTextPane2"); // NOI18N
    jTextPane2.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
      public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
        jTextPane2testHyperlinkListener(evt);
      }
    });
    jScrollPane2.setViewportView(jTextPane2);

    androidMainPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

    browsePanel.setName("browsePanel"); // NOI18N
    browsePanel.setOpaque(false);
    browsePanel.setLayout(new java.awt.BorderLayout());

    androidBrowseTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
    androidBrowseTextField.setMargin(new java.awt.Insets(0, 0, 0, 0));
    androidBrowseTextField.setMinimumSize(new java.awt.Dimension(30, 30));
    androidBrowseTextField.setName("androidBrowseTextField"); // NOI18N
    androidBrowseTextField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        androidBrowseTextFieldKeyReleased(evt);
      }
    });
    browsePanel.add(androidBrowseTextField, java.awt.BorderLayout.CENTER);

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.sonyericsson.web.sdk.controller.WebSDK.class).getContext().getActionMap(SetupAndroidPanel.class, this);
    androidBrowseButton.setAction(actionMap.get("browseAndroidPath")); // NOI18N
    androidBrowseButton.setIcon(resourceMap.getIcon("androidBrowseButton.icon")); // NOI18N
    androidBrowseButton.setText(resourceMap.getString("androidBrowseButton.text")); // NOI18N
    androidBrowseButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
    androidBrowseButton.setBorderPainted(false);
    androidBrowseButton.setContentAreaFilled(false);
    androidBrowseButton.setFocusPainted(false);
    androidBrowseButton.setName("androidBrowseButton"); // NOI18N
    androidBrowseButton.setPressedIcon(resourceMap.getIcon("androidBrowseButton.pressedIcon")); // NOI18N
    androidBrowseButton.setRolloverIcon(resourceMap.getIcon("androidBrowseButton.rolloverIcon")); // NOI18N
    browsePanel.add(androidBrowseButton, java.awt.BorderLayout.LINE_END);

    androidBrowseLabel.setText(resourceMap.getString("androidBrowseLabel.text")); // NOI18N
    androidBrowseLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    androidBrowseLabel.setName("androidBrowseLabel"); // NOI18N
    browsePanel.add(androidBrowseLabel, java.awt.BorderLayout.PAGE_START);

    androidMainPanel.add(browsePanel, java.awt.BorderLayout.PAGE_END);

    add(androidMainPanel, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

    private void jTextPane2testHyperlinkListener(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_jTextPane2testHyperlinkListener
      if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        Desktop desktop = Desktop.getDesktop();
        if (desktop.isSupported(Desktop.Action.BROWSE)) {
          try {
            System.out.println("Got a link event! " + evt.getDescription());
            desktop.browse(new URI(evt.getDescription()));
          } catch (IOException ex) {
            Logger.getLogger(SetupView.class.getName()).log(Level.SEVERE, null, ex);
          } catch (URISyntaxException ex) {
            Logger.getLogger(SetupView.class.getName()).log(Level.SEVERE, null, ex);
          }
        }
      }
}//GEN-LAST:event_jTextPane2testHyperlinkListener

    private void androidBrowseTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_androidBrowseTextFieldKeyReleased
      firePanelChanged();
    }//GEN-LAST:event_androidBrowseTextFieldKeyReleased

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton androidBrowseButton;
  private javax.swing.JLabel androidBrowseLabel;
  private javax.swing.JTextField androidBrowseTextField;
  private javax.swing.JPanel androidMainPanel;
  private javax.swing.JPanel androidTopPanel;
  private javax.swing.JPanel browsePanel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextPane jTextPane2;
  // End of variables declaration//GEN-END:variables
}
