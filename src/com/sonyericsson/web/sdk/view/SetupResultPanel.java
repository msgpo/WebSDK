/* License (MIT)
 * Copyright 2009 Sony Ericsson Mobile Communications AB
 * website: http://developer.sonyericsson.com/
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * Software), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.sonyericsson.web.sdk.view;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class SetupResultPanel extends AbstractPanel {

  SetupView setupView;

  /** Creates new form setupResultPanel */
  public SetupResultPanel(SetupView setupView) {
    this.setupView = setupView;
    initComponents();

    addComponentListener(new ComponentAdapter() {

      @Override
      public void componentShown(ComponentEvent e) {
        System.out.println("downloadPanel.componentShown");
        firePanelChanged();

      }

      @Override
      public void componentHidden(ComponentEvent e) {
      }
    });
  }

  public void updateInfo() {
    populateAndroidInfo();
    populateJDKInfo();
    populateEclipsePluginInfo();
    populatePhonegapInfo();
  }

  public void populateAndroidInfo() {
    androidValueLabel.setText(setupView.getAndroidPanelPath());
  }

  public void populateJDKInfo() {
    if(!setupView.isToolsAvailable())
    {
      jdkValueLabel.setText(setupView.getJDKPanelPath());
    }
    else
    {
      jdkValueLabel.setText("Located");
    }
  }

  public void populateEclipsePluginInfo() {
    if (setupView.shouldPluginBeInstalled()) {
      pluginValueLabel.setText("Will be installed.");
    } else {
      pluginValueLabel.setText("Will NOT be installed.");
    }
  }

  public void populatePhonegapInfo() {
    phonegapValueLabel.setText(setupView.getPhonegapPanelPath());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        summaryTopPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        summareMainPanel = new javax.swing.JPanel();
        componentPanel = new javax.swing.JPanel();
        jdkResultPanel = new javax.swing.JPanel();
        jdkResultLabel = new javax.swing.JLabel();
        jdkValueLabel = new javax.swing.JLabel();
        androidResultPanel = new javax.swing.JPanel();
        androidResultLabel = new javax.swing.JLabel();
        androidValueLabel = new javax.swing.JLabel();
        pluginResultPanel = new javax.swing.JPanel();
        pluginResultLabel = new javax.swing.JLabel();
        pluginValueLabel = new javax.swing.JLabel();
        phonegapResultPanel = new javax.swing.JPanel();
        phonegapResultLabel = new javax.swing.JLabel();
        phonegapValueLabel = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(SetupResultPanel.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        summaryTopPanel.setBackground(resourceMap.getColor("summaryTopPanel.background")); // NOI18N
        summaryTopPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        summaryTopPanel.setName("summaryTopPanel"); // NOI18N
        summaryTopPanel.setOpaque(false);
        summaryTopPanel.setPreferredSize(new java.awt.Dimension(90, 90));
        summaryTopPanel.setLayout(new java.awt.BorderLayout());

        jLabel15.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        summaryTopPanel.add(jLabel15, java.awt.BorderLayout.CENTER);

        add(summaryTopPanel, java.awt.BorderLayout.PAGE_START);

        summareMainPanel.setBackground(resourceMap.getColor("summareMainPanel.background")); // NOI18N
        summareMainPanel.setName("summareMainPanel"); // NOI18N
        summareMainPanel.setOpaque(false);
        summareMainPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        componentPanel.setBackground(resourceMap.getColor("componentPanel.background")); // NOI18N
        componentPanel.setName("componentPanel"); // NOI18N
        componentPanel.setLayout(new javax.swing.BoxLayout(componentPanel, javax.swing.BoxLayout.PAGE_AXIS));

        jdkResultPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jdkResultPanel.setName("jdkResultPanel"); // NOI18N
        jdkResultPanel.setOpaque(false);
        jdkResultPanel.setLayout(new java.awt.BorderLayout());

        jdkResultLabel.setFont(resourceMap.getFont("jdkResultLabel.font")); // NOI18N
        jdkResultLabel.setText(resourceMap.getString("jdkResultLabel.text")); // NOI18N
        jdkResultLabel.setName("jdkResultLabel"); // NOI18N
        jdkResultPanel.add(jdkResultLabel, java.awt.BorderLayout.PAGE_START);

        jdkValueLabel.setText(resourceMap.getString("jdkValueLabel.text")); // NOI18N
        jdkValueLabel.setName("jdkValueLabel"); // NOI18N
        jdkResultPanel.add(jdkValueLabel, java.awt.BorderLayout.PAGE_END);

        componentPanel.add(jdkResultPanel);

        androidResultPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        androidResultPanel.setName("androidResultPanel"); // NOI18N
        androidResultPanel.setOpaque(false);
        androidResultPanel.setLayout(new java.awt.BorderLayout());

        androidResultLabel.setFont(resourceMap.getFont("androidResultLabel.font")); // NOI18N
        androidResultLabel.setText(resourceMap.getString("androidResultLabel.text")); // NOI18N
        androidResultLabel.setName("androidResultLabel"); // NOI18N
        androidResultPanel.add(androidResultLabel, java.awt.BorderLayout.PAGE_START);

        androidValueLabel.setText(resourceMap.getString("androidValueLabel.text")); // NOI18N
        androidValueLabel.setName("androidValueLabel"); // NOI18N
        androidResultPanel.add(androidValueLabel, java.awt.BorderLayout.PAGE_END);

        componentPanel.add(androidResultPanel);

        pluginResultPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pluginResultPanel.setName("pluginResultPanel"); // NOI18N
        pluginResultPanel.setOpaque(false);
        pluginResultPanel.setLayout(new java.awt.BorderLayout());

        pluginResultLabel.setFont(resourceMap.getFont("pluginResultLabel.font")); // NOI18N
        pluginResultLabel.setText(resourceMap.getString("pluginResultLabel.text")); // NOI18N
        pluginResultLabel.setName("pluginResultLabel"); // NOI18N
        pluginResultPanel.add(pluginResultLabel, java.awt.BorderLayout.PAGE_START);

        pluginValueLabel.setText(resourceMap.getString("pluginValueLabel.text")); // NOI18N
        pluginValueLabel.setName("pluginValueLabel"); // NOI18N
        pluginResultPanel.add(pluginValueLabel, java.awt.BorderLayout.PAGE_END);

        componentPanel.add(pluginResultPanel);

        phonegapResultPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        phonegapResultPanel.setName("phonegapResultPanel"); // NOI18N
        phonegapResultPanel.setOpaque(false);
        phonegapResultPanel.setLayout(new java.awt.BorderLayout());

        phonegapResultLabel.setFont(resourceMap.getFont("phonegapResultLabel.font")); // NOI18N
        phonegapResultLabel.setText(resourceMap.getString("phonegapResultLabel.text")); // NOI18N
        phonegapResultLabel.setName("phonegapResultLabel"); // NOI18N
        phonegapResultPanel.add(phonegapResultLabel, java.awt.BorderLayout.PAGE_START);

        phonegapValueLabel.setName("phonegapValueLabel"); // NOI18N
        phonegapResultPanel.add(phonegapValueLabel, java.awt.BorderLayout.PAGE_END);

        componentPanel.add(phonegapResultPanel);

        summareMainPanel.add(componentPanel);

        add(summareMainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel androidResultLabel;
    private javax.swing.JPanel androidResultPanel;
    private javax.swing.JLabel androidValueLabel;
    private javax.swing.JPanel componentPanel;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jdkResultLabel;
    private javax.swing.JPanel jdkResultPanel;
    private javax.swing.JLabel jdkValueLabel;
    private javax.swing.JLabel phonegapResultLabel;
    private javax.swing.JPanel phonegapResultPanel;
    private javax.swing.JLabel phonegapValueLabel;
    private javax.swing.JLabel pluginResultLabel;
    private javax.swing.JPanel pluginResultPanel;
    private javax.swing.JLabel pluginValueLabel;
    private javax.swing.JPanel summareMainPanel;
    private javax.swing.JPanel summaryTopPanel;
    // End of variables declaration//GEN-END:variables
}
